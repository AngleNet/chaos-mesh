// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chaosstress.proto

package chaosstress

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StressRequest struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Stressors            string   `protobuf:"bytes,2,opt,name=stressors,proto3" json:"stressors,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StressRequest) Reset()         { *m = StressRequest{} }
func (m *StressRequest) String() string { return proto.CompactTextString(m) }
func (*StressRequest) ProtoMessage()    {}
func (*StressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9cb06dc7e53fa13d, []int{0}
}

func (m *StressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StressRequest.Unmarshal(m, b)
}
func (m *StressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StressRequest.Marshal(b, m, deterministic)
}
func (m *StressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StressRequest.Merge(m, src)
}
func (m *StressRequest) XXX_Size() int {
	return xxx_messageInfo_StressRequest.Size(m)
}
func (m *StressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StressRequest proto.InternalMessageInfo

func (m *StressRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *StressRequest) GetStressors() string {
	if m != nil {
		return m.Stressors
	}
	return ""
}

type StressResponse struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StressResponse) Reset()         { *m = StressResponse{} }
func (m *StressResponse) String() string { return proto.CompactTextString(m) }
func (*StressResponse) ProtoMessage()    {}
func (*StressResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9cb06dc7e53fa13d, []int{1}
}

func (m *StressResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StressResponse.Unmarshal(m, b)
}
func (m *StressResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StressResponse.Marshal(b, m, deterministic)
}
func (m *StressResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StressResponse.Merge(m, src)
}
func (m *StressResponse) XXX_Size() int {
	return xxx_messageInfo_StressResponse.Size(m)
}
func (m *StressResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StressResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StressResponse proto.InternalMessageInfo

func (m *StressResponse) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func init() {
	proto.RegisterType((*StressRequest)(nil), "chaosstress.StressRequest")
	proto.RegisterType((*StressResponse)(nil), "chaosstress.StressResponse")
}

func init() {
	proto.RegisterFile("chaosstress.proto", fileDescriptor_9cb06dc7e53fa13d)
}

var fileDescriptor_9cb06dc7e53fa13d = []byte{
	// 198 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4c, 0xce, 0x48, 0xcc,
	0x2f, 0x2e, 0x2e, 0x29, 0x4a, 0x2d, 0x2e, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x46,
	0x12, 0x92, 0x92, 0x4e, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x07, 0x4b, 0x25, 0x95, 0xa6, 0xe9,
	0xa7, 0xe6, 0x16, 0x94, 0x54, 0x42, 0x54, 0x2a, 0x39, 0x72, 0xf1, 0x06, 0x83, 0x95, 0x05, 0xa5,
	0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0x09, 0x71, 0xb1, 0x94, 0x96, 0x66, 0xa6, 0x48, 0x30, 0x2a,
	0x30, 0x6a, 0x70, 0x06, 0x81, 0xd9, 0x42, 0x32, 0x5c, 0x9c, 0x10, 0xb3, 0xf2, 0x8b, 0x8a, 0x25,
	0x98, 0xc0, 0x12, 0x08, 0x01, 0x25, 0x15, 0x2e, 0x3e, 0x98, 0x11, 0xc5, 0x05, 0xf9, 0x79, 0xc5,
	0xa9, 0xd8, 0xcc, 0x30, 0x5a, 0xc4, 0xc8, 0xc5, 0xed, 0x0c, 0x72, 0x15, 0x44, 0xad, 0x90, 0x17,
	0x17, 0xaf, 0x6b, 0x45, 0x6a, 0x72, 0x30, 0xcc, 0x18, 0x21, 0x29, 0x3d, 0x64, 0x7f, 0xa0, 0x38,
	0x4a, 0x4a, 0x1a, 0xab, 0x1c, 0xc4, 0x36, 0x25, 0x06, 0x21, 0x77, 0x2e, 0x7e, 0xe7, 0xc4, 0xbc,
	0xe4, 0xd4, 0x1c, 0xe2, 0x4c, 0x13, 0xd3, 0x83, 0x84, 0x88, 0x1e, 0x2c, 0x44, 0xf4, 0x5c, 0x41,
	0x21, 0xa2, 0xc4, 0x90, 0xc4, 0x06, 0x16, 0x31, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x4b, 0xa0,
	0xa2, 0xfa, 0x53, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ChaosStressClient is the client API for ChaosStress service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChaosStressClient interface {
	ExecStressors(ctx context.Context, in *StressRequest, opts ...grpc.CallOption) (*StressResponse, error)
	CancelStressors(ctx context.Context, in *StressRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type chaosStressClient struct {
	cc grpc.ClientConnInterface
}

func NewChaosStressClient(cc grpc.ClientConnInterface) ChaosStressClient {
	return &chaosStressClient{cc}
}

func (c *chaosStressClient) ExecStressors(ctx context.Context, in *StressRequest, opts ...grpc.CallOption) (*StressResponse, error) {
	out := new(StressResponse)
	err := c.cc.Invoke(ctx, "/chaosstress.ChaosStress/ExecStressors", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chaosStressClient) CancelStressors(ctx context.Context, in *StressRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/chaosstress.ChaosStress/CancelStressors", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChaosStressServer is the server API for ChaosStress service.
type ChaosStressServer interface {
	ExecStressors(context.Context, *StressRequest) (*StressResponse, error)
	CancelStressors(context.Context, *StressRequest) (*empty.Empty, error)
}

// UnimplementedChaosStressServer can be embedded to have forward compatible implementations.
type UnimplementedChaosStressServer struct {
}

func (*UnimplementedChaosStressServer) ExecStressors(ctx context.Context, req *StressRequest) (*StressResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecStressors not implemented")
}
func (*UnimplementedChaosStressServer) CancelStressors(ctx context.Context, req *StressRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelStressors not implemented")
}

func RegisterChaosStressServer(s *grpc.Server, srv ChaosStressServer) {
	s.RegisterService(&_ChaosStress_serviceDesc, srv)
}

func _ChaosStress_ExecStressors_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChaosStressServer).ExecStressors(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chaosstress.ChaosStress/ExecStressors",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChaosStressServer).ExecStressors(ctx, req.(*StressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChaosStress_CancelStressors_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChaosStressServer).CancelStressors(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chaosstress.ChaosStress/CancelStressors",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChaosStressServer).CancelStressors(ctx, req.(*StressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ChaosStress_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chaosstress.ChaosStress",
	HandlerType: (*ChaosStressServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ExecStressors",
			Handler:    _ChaosStress_ExecStressors_Handler,
		},
		{
			MethodName: "CancelStressors",
			Handler:    _ChaosStress_CancelStressors_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "chaosstress.proto",
}
